class Solution{
    public:
    pair<bool,int> solve(Node * root)
    {
        if(root == nullptr)
        {
            pair<bool, int> p = make_pair(true,0);
            return p;
        }
        pair<bool,int> left = solve(root->left);
        pair<bool,int> right = solve(root->right);
         bool op1 = left.first;
         bool op2 = right.first;
         bool diff = abs( left.second- right.second)<=1;
         pair<bool,int> ans;
         ans.second= max(left.second,right.second)+1;
         if(op1 && op2 && diff )
         {
             ans.first = true;
         }
         else
         {
             ans.first= false;
         }
         return ans;
    }
    bool isBalanced(Node *root)
    {
        pair<bool,int> p =solve(root);
        return p.first;
    }
};
