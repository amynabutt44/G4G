 vector <int> max_of_subarrays(int *arr, int n, int k)
    {
        // your code here
        vector<int> ans;
        deque<int> q;    
        int i;
        
        // Processing the first window of size k
        for (i = 0; i < k; i++)
        {
            while (!q.empty() && arr[q.back()] <= arr[i])
            {
                q.pop_back();
            }
            q.push_back(i);
        }
        
        ans.push_back(arr[q.front()]); 
        
        // Processing the remaining windows
        for (; i < n; i++)
        {
            while (!q.empty() && q.front() <= i - k)
            {
                q.pop_front();
            }
            while (!q.empty() && arr[q.back()] <= arr[i])
            {
                q.pop_back();
            }
            q.push_back(i);
            ans.push_back(arr[q.front()]); 
        }
        
        return ans;

    }
